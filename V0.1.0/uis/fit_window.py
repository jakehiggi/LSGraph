from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(678, 439)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tree = QtWidgets.QTreeWidget(self.centralwidget)
        self.tree.setAlternatingRowColors(True)
        self.tree.setObjectName("tree")
        self.gridLayout.addWidget(self.tree, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(7)
        self.toolBar.setFont(font)
        self.toolBar.setIconSize(QtCore.QSize(20, 20))
        self.toolBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionFunc = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../icons/function.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFunc.setIcon(icon)
        self.actionFunc.setObjectName("actionFunc")
        self.actionAdd = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../icons/add_29356.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAdd.setIcon(icon1)
        self.actionAdd.setObjectName("actionAdd")
        self.actionUpdate = QtWidgets.QAction(MainWindow)
        self.actionUpdate.setObjectName("actionUpdate")
        self.actionAdd_Tau = QtWidgets.QAction(MainWindow)
        self.actionAdd_Tau.setObjectName("actionAdd_Tau")
        self.toolBar.addAction(self.actionFunc)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAdd)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionUpdate)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAdd_Tau)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tree.headerItem().setText(0, _translate("MainWindow", "Name"))
        self.tree.headerItem().setText(1, _translate("MainWindow", "Value"))
        self.tree.headerItem().setText(2, _translate("MainWindow", "Error"))
        self.tree.headerItem().setText(3, _translate("MainWindow", "Low Lim."))
        self.tree.headerItem().setText(4, _translate("MainWindow", "High Lim."))
        self.tree.headerItem().setText(5, _translate("MainWindow", "Lock"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionFunc.setText(_translate("MainWindow", "Fnc."))
        self.actionAdd.setText(_translate("MainWindow", "Add"))
        self.actionAdd.setStatusTip(_translate("MainWindow", "adds fits to the plot"))
        self.actionUpdate.setText(_translate("MainWindow", "Update"))
        self.actionUpdate.setStatusTip(_translate("MainWindow", "updates graph to changes in values (ctrl+u)"))
        self.actionUpdate.setShortcut(_translate("MainWindow", "Ctrl+Return"))
        self.actionAdd_Tau.setText(_translate("MainWindow", "Add Values"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
